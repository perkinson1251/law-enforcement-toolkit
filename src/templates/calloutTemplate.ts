import { ICallout } from "@/types";
import getStatusDescription from "@/utils/callous/getStatusDescription";
import {
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  EmbedBuilder,
} from "discord.js";

interface CalloutTemplateParams {
  userId: string;
  divisionName: string;
  divisionLogoUrl?: string;
  callout: ICallout;
  roleColor: number | undefined;
}

export default function createCalloutEmbed({
  userId,
  divisionName,
  divisionLogoUrl,
  callout,
  roleColor,
}: CalloutTemplateParams) {
  const embed = new EmbedBuilder()
    .setColor(roleColor ?? "Random")
    .setAuthor({ name: `${divisionName} Request` })
    .setTitle("CALLOUT")
    .addFields(
      { name: "–ó–ê–ü–†–û–° –û–¢–ü–†–ê–í–ò–õ:", value: `<@${userId}>`, inline: false },
      { name: "–¢–ò–ü –ò–ù–¶–ò–î–ï–ù–¢–ê:", value: callout.incidentType, inline: false },
      { name: "–õ–û–ö–ê–¶–ò–Ø:", value: callout.incidentLocation, inline: false },
      {
        name: "–î–ï–¢–ê–õ–ò –ò–ù–¶–ò–î–ï–ù–¢–ê:",
        value: callout.incidentDetails,
        inline: false,
      },
      {
        name: "–ö–ê–ù–ê–õ –í TEAMSPEAK:",
        value: callout.incidentChannel,
        inline: false,
      },
      {
        name: "–°–¢–ê–¢–£–°:",
        value: getStatusDescription(callout.status),
        inline: false,
      },
      {
        name: "–°–û–ó–î–ê–ù:",
        value: `<t:${callout.timestamp}:R>`,
        inline: false,
      }
    );

  if (divisionLogoUrl) {
    embed.setThumbnail(divisionLogoUrl);
  }

  return embed;
}

export function createCalloutButtons(
  calloutId: string,
  isDeBriefOff: boolean = false
) {
  const statusButton = new ButtonBuilder()
    .setCustomId(`callout-status-button-${calloutId}`)
    .setLabel("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
    .setStyle(ButtonStyle.Primary)
    .setEmoji("üõ†Ô∏è");

  const deBriefButton = new ButtonBuilder()
    .setCustomId(`callout-deBrief-button-${calloutId}`)
    .setLabel("–û–±–Ω–æ–≤–∏—Ç—å –¥–µ—Ç–∞–ª–∏")
    .setDisabled(isDeBriefOff)
    .setStyle(ButtonStyle.Secondary)
    .setEmoji("‚úèÔ∏è");

  const threadButton = new ButtonBuilder()
    .setCustomId(`callout-thread-button-${calloutId}`)
    .setLabel("–°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É")
    .setStyle(ButtonStyle.Success)
    .setEmoji("üìÇ");

  const row = new ActionRowBuilder<ButtonBuilder>().addComponents(
    statusButton,
    deBriefButton,
    threadButton
  );

  return row;
}
